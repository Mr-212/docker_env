FROM node:18-buster-slim AS node
FROM composer:2.3 AS composer
FROM stripe/stripe-cli
FROM php:7.4.32-apache-buster
USER root

# EXPOSE 8080
RUN apt update
RUN apt install -y  --no-install-recommends \
    libpng-dev \
    nginx \
    git \
    nano \
	libmemcached-dev \
	libz-dev \
	libpq-dev \
	libssl-dev libssl-doc libsasl2-dev \
	libmcrypt-dev \
	libxml2-dev \
    libzip-dev \
	zlib1g-dev libicu-dev g++ \
	libldap2-dev libbz2-dev \
	curl libcurl4-openssl-dev \
	libenchant-dev libgmp-dev firebird-dev libib-util \
	re2c libpng++-dev \
	libwebp-dev libjpeg-dev libjpeg62-turbo-dev libpng-dev libxpm-dev libvpx-dev libfreetype6-dev \
	libmagick++-dev \
	libmagickwand-dev \
	libgd-dev \
	libtidy-dev libxslt1-dev libmagic-dev libexif-dev file \
	sqlite3 libsqlite3-dev libxslt-dev \
	libmhash2 libmhash-dev libc-client-dev libkrb5-dev libssh2-1-dev \
	unzip libpcre3 libpcre3-dev \
	poppler-utils ghostscript libmagickwand-6.q16-dev libsnmp-dev libedit-dev libreadline6-dev libsodium-dev \
	freetds-bin freetds-dev freetds-common libct4 libsybdb5 tdsodbc libreadline-dev librecode-dev libpspell-dev libonig-dev

    



RUN docker-php-ext-install \
    zip\
    mysqli \
    exif \
    gd \
    intl \
    mbstring \
    pdo_mysql \
    sockets  \
    tokenizer \
    iconv \
    mbstring \
    opcache \
    pdo_mysql \
    json \
    openssl \
    pcntl \
    dom xml xmlwriter fileinfo zlib session simplexml

RUN docker-php-ext-install bcmath bz2 calendar ctype curl dba dom enchant
RUN docker-php-ext-install fileinfo exif ftp gettext gmp
RUN docker-php-ext-install intl json ldap mbstring mysqli
RUN docker-php-ext-install opcache pcntl pspell
RUN docker-php-ext-install pdo pdo_dblib pdo_mysql pdo_pgsql pdo_sqlite pgsql phar posix
RUN docker-php-ext-install readline
RUN docker-php-ext-install session shmop simplexml soap sockets sodium
RUN docker-php-ext-install sysvmsg sysvsem sysvshm

#compose path setting 
COPY --from=composer /usr/bin/composer /usr/bin/composer

# node path setting

# COPY --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules
# COPY --from=node /usr/local/bin/node /usr/local/bin/node
# RUN ln -sf /usr/local/lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm


# COPY --from=node /usr/local/bin/npm /usr/local/bin/npm

# RUN touch /usr/local/bin/npm
# RUN chown -R $USER:$USER  /usr/local/bin/npm
# RUN chmod +x /usr/local/bin/npm
# RUN mkdir -p /usr/local/bin
# USER $USER

# COPY --from=php /usr/local/bin/php /usr/local/bin/php
# RUN chown -R $(whoami) /usr/local/bin/npm
# RUN chmod -R 777 /usr/local/bin/npm
# RUN chown -R root:root /usr/local/bin/npm
# RUN chmod -R 0777 ${WORKDIR}

# RUN docker-php-ext-install zip
# RUN php -r "readfile('http://getcomposer.org/installer');" | php -- --install-dir=/usr/bin/ --filename=composer
# CMD ["apache2ctl","-D","FOREGROUND"]
#CMD php artisan serve --host=0.0.0.0 --port=8002
# CMD ["/usr/sbin/httpd", "-D", "FOREGROUND"]
# CMD ["httpd-foreground"]

# CMD ["-D","FOREGROUND"]

# Srart httpd when container runs
# ENTRYPOINT ["/usr/sbin/httpd"]
CMD ["apache2ctl -D FOREGROUND"]
