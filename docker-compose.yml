version: '3.7'

services:
  # apache:
  #   container_name: httpd
  #   build:
  #     context: .
  #     dockerfile: ./apache/Dockerfile
  #   #command: 'php artisan serve --host=0.0.0.0 --port=8002'  
  #   ports:
  #     - 81:80
  #     # - 2525:2525
  #   volumes:
  #     - ${HOST_DIR}:${WORKING_DIR}
  #     - ./apache/officio.conf:/usr/local/apache2/conf/officio.conf
  #       # - ./apache/000-default.conf:/etc/apache2/sites-available/000-default.conf
  #     # - ./apache/officio.conf:/etc/apache2/sites-available/officio.conf
  #     # - ./apache/000-default.conf:/user/local/conf/sites/000-default.conf

  #   env_file:
  #     - ./.env
  #   networks:
  #     - app-network 
  # php74_alpine:
  #   container_name: php74_alpine
  #   image: sys_env_php74_alpine:latest
  #   build:
  #     context: .
  #     dockerfile: ./php74_alpine/Dockerfile
  #   ports:
  #     - 8009:8000
  #   volumes:
  #     - ${HOST_DIR}:${WORKING_DIR}
  #     # - ./php74/000-default.conf:/etc/apache2/sites-available/000-default.conf
  #   env_file:
  #     - ./.env
  #   # depends_on:
  #   #   - cache  
  #   networks:
  #     - app-network 

  # php74:
  #   container_name: php74
  #   build:
  #     context: .
  #     dockerfile: ./php74/Dockerfile
  #   ports:
  #     - 8002:8000
  #   volumes:
  #     - ${HOST_DIR}:${WORKING_DIR}
  #     # - ./php74/000-default.conf:/etc/apache2/sites-available/000-default.conf
  #   env_file:
  #     - ./.env
  #   networks:
  #     - app-network     

  php80:
    container_name: php80
    build:
      context: .
      dockerfile: ./php8.0/Dockerfile
    # command: 'chmod -R 0777 ${WORKING_DIR}'  
    ports:
      # - "80:80"
      - "8000:8000"
      - "2525:2525"
      - "3000:3000"

    # expose:
    #   - 8000
    #   - 80

    volumes:
      - ${HOST_DIR}:${WORKING_DIR}
      # - ./apache/officio.conf:/etc/apache2/sites-available/officio.conf

      # - ./php74/000-default.conf:/etc/apache2/sites-available/000-default.conf
    env_file:
      - ./.env
    networks:
      - app-network     

  # nodejs:
  #   build: 
  #     context: .
  #     dockerfile: ./node/Dockerfile
  #   container_name: nodejs
  #   volumes:
  #     - ./www:/var/www/html
  #   networks:
  #     - app-network
  #   restart: 'no'
    

  db:
    image: mysql
    container_name: mysql
    # command: --default-authentication-plugin=mysql_native_password #--datadir=/var/lib/mysql-no-volume
    restart: always
    volumes:
      - ./mysql_volume:/var/lib/mysql
    environment:
      # MYSQL_USER: user
      # MYSQL_USER: 'user'
      # You can use whatever password you like
      # MYSQL_PASSWORD: 'root'
      
      MYSQL_ROOT_PASSWORD: root #example of a password
    ports:
      - '3306:3306'  

  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8080:80

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./cache:/var/lib/redis
    networks:
      - app-network  

networks:
  app-network:
    driver: bridge
    name: php80
  # network:
  #   driver: bridge
  #   name: app-network  

# volumes:
#   host_dir:
#     driver: local
#     driver_opts:
#       type: 'none'
#       o: 'bind'
#       device: ${HOST_DIR}
